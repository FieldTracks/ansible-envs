#
# Ansible managed configuration - do not edit
#
server {
	listen 80;
	root /var/www/html;
	client_max_body_size 2M;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

{% for domain in nginx_api_gateway.domains %}
  server_name {{ domain }};
{% endfor %}


  location ^~ /.well-known/acme-challenge {
    alias /var/www/dehydrated;
  }

	location /grafana/ {
		proxy_pass http://localhost:3000/;
	}

	location /webdav {
					if ($request_method = OPTIONS ) {
			    	return 200;
					}
	        alias /var/www/webdav;
	        client_body_temp_path /var/www/webdav_temp;
	        create_full_put_path    on;
	        dav_access      user:rw group:rw        all:r;
	        auth_basic "WebDAV Access";
	        auth_basic_user_file /etc/nginx/webdav.passwd;
	        dav_methods     PUT DELETE MKCOL COPY MOVE;
	        dav_ext_methods   PROPFIND OPTIONS;
	        autoindex on;
					add_header 'Access-Control-Allow-Methods' 'PUT, GET,OPTIONS,PUT,DELETE' always;
					add_header 'Access-Control-Allow-Origin' 'http://localhost:4200' always;
					add_header 'Access-Control-Allow-Credentials' 'true' always;
					add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,User-Agent,Keep-Alive,Content-Type,accept,origin,X-Requested-With' always;
	}

	location /firmware {
	  alias /var/www/firmware;
	  auth_basic "Firmware Access";
	  auth_basic_user_file /etc/nginx/firmware.passwd;
	  autoindex on;
	}

	location /firmware-stones {
    alias /var/www/firmware-stones;
    auth_basic "Firmware Access";
    auth_basic_user_file /etc/nginx/firmware.passwd;
    autoindex on;
	}

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ /index.html;
	}
}

server {
	listen [::]:80;
	{% for domain in nginx_api_gateway.domains %}
	  server_name {{ domain }};
	{% endfor %}
	return 301 https://$host$request_uri;
}
